# compose.backup-cron.yml
# Alternative: Cron-based backup service for more precise scheduling

services:
  backup-cron:
    build:
      context: .
      dockerfile_inline: |
        FROM mysql:8.4
        RUN apt-get update && apt-get install -y cron && rm -rf /var/lib/apt/lists/*
        COPY scripts/backup.sh /usr/local/bin/backup.sh
        RUN chmod +x /usr/local/bin/backup.sh
        # Choose ONE of the following cron schedules:
        
        # Option A: Backup every 6 hours (current active setting)
        RUN echo "0 */6 * * * /usr/local/bin/backup.sh >> /var/log/backup.log 2>&1" | crontab -
        
        # Option B: Daily backup at 2 AM (uncomment to use instead)
        # RUN echo "0 2 * * * /usr/local/bin/backup.sh >> /var/log/backup.log 2>&1" | crontab -
        
        # Option C: Multiple backups per day (uncomment to use instead)
        # RUN echo "0 2,8,14,20 * * * /usr/local/bin/backup.sh >> /var/log/backup.log 2>&1" | crontab -
        CMD ["cron", "-f"]
    env_file: .env
    environment:
      BACKUP_DIR: /backups
      BACKUP_RETENTION_DAYS: ${BACKUP_RETENTION_DAYS:-14}
      DB_HOST: db
      DB_NAME: ${DB_NAME}
      DB_USER: root
      DB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - backup_data:/backups
      - backup_logs:/var/log
    depends_on:
      db:
        condition: service_healthy
    networks: [app]
    restart: unless-stopped

volumes:
  backup_data:
  backup_logs:
